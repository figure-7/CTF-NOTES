#e为多少就要有多少组nc
from functools import reduce
import gmpy2
n_list=[5729116818669182785567925725712075152147876625623208693292652173744440316391663724914901243522141757596999348967687372967263253304972239381997700537519241, 9857094324004029034228713839195209389534265231512005545195754882459206542255168215783594689090086987677690869758832925069627899541099708635929015227589613, 7400920406115376460681450203792940826295399552450760956272541698860422171091712840893768290639031041338181620340027128818494490186879500629190007742767143, 10265875726260985024094082545187905459242032703645957790078971783382808007752879166128432682066080849661608275099889915151633073587171794558101652240506537, 10476275974263745441486849873305102439251073966192575160892612859231857174589104718016739009729315169695495839928327258414303645957040879702032306350323079, 7101567307983378146475274195967514718517415129390625209624762204398349312435603344275755034414092883758697670745077926204924353646261506130690349634930341, 12172903653383246735708700580487787436292155019506984172729871726419340289874891053802107123661224825712934859224779860288814948040940941869657014162184413, 7546256162756631735809499522351483192533308073681330106378480731685866961964108812595495938236359586937733919534196858541513232291904662638926110373937051, 6550403543158294542268985682453257935607376154131669129074085666766927420291219344052020132713811835575307583373131366138115474971866001871256277005233349,7718564113994017850020913510810549690666930018283575507466608128994604019186683133456166593105553812583978398318161230208862650371940099211583735352111919,7476992186331033074422044319539499728233675277427905902890978235901597234665778820934356024742493885039833337357251546788689159769323988768683635665667933,6301760741742394254382956991815877081850686210778933249575114593421753484991767456423106860301316333867646898410266776221218449053001253474349220002147173,7340234669883375999189357241966062430181491031481179375695221822850147617750253425777192618468436837590886235786719224981564190143250020372907497344044903,5543734388531952468523437050575401037114915948862945178758187384905175884997802545896706660170249404523078602546804420594224798121707608518039968096648371,5740987812864733186476588463652620157534818139440153970995483829152960535794664380477491286648733540674693447539322423195601428603688208251161778916814043,5183463999647949339339569390032569214589803546319117608326721322641328210714430751007282215124624404888190718971458492797264259936125241439507681200414879,3431647193125832391825049325549793060390143308933751987257164029894860136828125383769444838172490743348155595981583825501996597442508593732174232504923147]
c_list=[1462589043116968765978575413362062922276235283631332890846310777769952588780970077076899666695397489556872473281800929823446343430454550461759259663502940, 3411976748652850262035223594351153193383196673514406018493504363317839196455455369504987145198363943443383501365555684758085702916524674608578283192108404, 2154305810305345316282817460044552197474150913931321051577933313494440405197390363574302046931381434159843822329612189515322449409167511457770235058717322, 10220611404127350539014519053782217339324289740842264209031479438569899502480245795955885963638243322726230802768585890941606096583013055661560879517134787, 1312358743126497753429630159837084157945924832017905196629579772648913912711013704695130964147436536799255272766622799525168390916838371337635815056627092, 1140840424428196474526166517785510864943376819433153443335666895279548111555824028172298178815900327777250495289539427521319703040900117199569252343403213, 2544094472978357242069646577603783546150806460023219206031598338761581404922046785330174120203528845119777705321792848192593892464024351980866904873143972, 4795992705292166514218931952014026439665328478172566153062751856342083114605024046759637413420248376288249279948863001073939605326818785577157993554585099, 1009437341266275987101588592104549330922221180479392412788408710765357841661398840928970019735693363525072338277697106288722736621160759469578790924107253,6140214839966054944326375214399372128705632653743397626324815936704790671087615332200995459478938201492635357614577442377181798629644274032848935309633443,5126957457858318776192537006716415923457328335926836542340215291037151087859371154120674603367995175044963748620345078260157772490158113211871370670117093,5221276775154842725191193964440005291467900790713295778733984618121426307721711712104955412245585657091734003762336743421449336567172133290890523041802215,373395233286382183456028248445253235580934735239054520172446427823424343785794415409997353993243511843072537759590129179084407166210277339099078887501966,1812046686000924261199978884698305470207992315852810376151971069940853534125771236040263880183364405329370341449648613700060035997840023831500286693212227,2541662278325972020782131660041799254334990608997947521207413883502530560230902566814270613966525469549009994669811534199106579749274815564366741189118713,3087935258004346139260338411850328716541180052806714332616503317915589368577712698911161004773983281070956739390753892558748477343682033072367676144033538,1056122387517378541168549421824207990053799999292556263227015558885458558473989643902441619222695679753414116569109874037892437997883235044060816804595653]
def chinese_remainder(n, a):#
    sum = 0
    prod = reduce(lambda a, b: a * b, n)
    for n_i, a_i in zip(n, a):
        p = prod // n_i
        sum += a_i * gmpy2.invert(p, n_i) * p
    return int(sum % prod)
m_9=chinese_remainder(n_list,c_list)
m=gmpy2.iroot(m_9,17)[0]
print(bytes.fromhex(hex(m)[2:]))
